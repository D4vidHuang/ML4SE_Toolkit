line,rule,error
1,externals ::= { multiComment _automaticSemicolon val var def1 interpStart openMultiComment empty trailingComma },"string indices must be integers, not 'str'"
3,extras    ::= { whiteSpace comment },'NoneType' object has no attribute 'lower'
7,conflicts ::= { { SimpleExpr },'NoneType' object has no attribute 'lower'
47,CompilationUnit      ::= ('package' QualId semi)* TopStatSeq,'NoneType' object has no attribute 'lower'
48,whiteSpace           ::= /[\u0020\u0009\u000D\u000A]/,"string indices must be integers, not 'str'"
57,lower                ::= [$lowerChars],"string indices must be integers, not 'str'"
59,paren                ::= [(){}\[\]],'NoneType' object has no attribute 'lower'
66,[v]arid              ::= /$varidRegex/,'NoneType' object has no attribute 'lower'
67,boundvarid           ::= /($varidRegex|[`]$varidRegex[`])/,'NoneType' object has no attribute 'lower'
71,identifier           ::= /($opchar+|$idRegex|$varidRegex|[`]$varidRegex[`])/,'NoneType' object has no attribute 'lower'
74,integerLiteral       ::= /-?($decimalNumeral|$hexNumeral)[Ll]?/,'NoneType' object has no attribute 'lower'
75,decimalNumeral       ::= /[0-9]+/,"string indices must be integers, not 'str'"
81,floatingPointLiteral ::= /-?($fpLit1|$fpLit2|$fpLit3|$fpLit4)/,'NoneType' object has no attribute 'lower'
84,"booleanLiteral       ::= ""true"" | ""false""",'NoneType' object has no attribute 'lower'
85,"characterLiteral     ::= /'([\u0020-\u0026\u0028-\u007f]|\\[btnfr""'\\])'/",'NoneType' object has no attribute 'lower'
86,"rawString            ::= /""""""(""?""?[^""])*""*""""""/","string indices must be integers, not 'str'"
88,"string               ::= /""([^""\u000A]|$escapeSeq)*""/",'NoneType' object has no attribute 'lower'
89,charMinusQuoteDollar ::= [ !#\u0025-\u007f],"string indices must be integers, not 'str'"
90,"charMinusQuoteDollar ::= [^""\$]","string indices must be integers, not 'str'"
91,"[i]nterpolatedString ::= alphaid '""' (charMinusQuoteDollar | escape)* '""'",'NoneType' object has no attribute 'lower'
93,"[e]scape             ::= ""$$"" | ""$"" id | ""$"" BlockExpr",'NoneType' object has no attribute 'lower'
94,alphaid              ::= $upper $idrest | varid,'NoneType' object has no attribute 'lower'
95,symbolLiteral        ::= /[']$plainid/,"string indices must be integers, not 'str'"
97,"nl                   ::= ""\\n""",'NoneType' object has no attribute 'lower'
98,semi                 ::= (';' | _automaticSemicolon),'NoneType' object has no attribute 'lower'
99,id                   ::= /$idRegex/,'NoneType' object has no attribute 'lower'
111,"QualId               ::= id (""."" id)*",'NoneType' object has no attribute 'lower'
112,"ids                  ::= id ("","" id)*",'NoneType' object has no attribute 'lower'
116,StableId             ::= 5(id,'NoneType' object has no attribute 'lower'
119,"ClassQualifier       ::= ""["" id ""]""","string indices must be integers, not 'str'"
120,"ValDef               ::= ""val"" id ""="" Literal","string indices must be integers, not 'str'"
122,Type                 ::= 1(FunctionArgTypes '=>' Type | InfixType,'NoneType' object has no attribute 'lower'
126,ExistentialClause    ::= 'forSome' '{' ExistentialDcl (semi ExistentialDcl)* '}','NoneType' object has no attribute 'lower'
127,ExistentialDcl       ::= 'type' TypeDcl,'NoneType' object has no attribute 'lower'
130,CompoundType         ::= AnnotType ('with' AnnotType)* Refinement? | Refinement,'NoneType' object has no attribute 'lower'
137,TypeArgs             ::= '[' Types ']','NoneType' object has no attribute 'lower'
138,"Types                ::= 1(Type (',' Type)*)",'NoneType' object has no attribute 'lower'
139,Refinement           ::= nl? '{' RefineStat? (semi RefineStat)* '}','NoneType' object has no attribute 'lower'
144,Ascription           ::= 1(':' InfixType,'NoneType' object has no attribute 'lower'
148,IfExpression         ::= ('if' '(' Expr ')' nl* Expr (semi? 'else' Expr)?),'NoneType' object has no attribute 'lower'
149,WhileExpression      ::= 'while' '(' Expr ')' nl* Expr,'NoneType' object has no attribute 'lower'
150,TryExpression        ::= ('try' Expr ('catch' Expr)? ('finally' Expr)?),'NoneType' object has no attribute 'lower'
151,DoExpression         ::= ('do' Expr semi? 'while' '(' Expr ')'),'NoneType' object has no attribute 'lower'
152,ThrowExpression      ::= 'throw' Expr,'NoneType' object has no attribute 'lower'
153,ReturnExpression     ::= ('return' Expr?),'NoneType' object has no attribute 'lower'
154,ForExpression        ::= 'for' ('(' Enumerators ')' | '{' Enumerators semi? '}') nl* 'yield'? Expr,'NoneType' object has no attribute 'lower'
155,CaseExpression       ::= PostfixExpr 'match' '{' CaseClauses '}','NoneType' object has no attribute 'lower'
156,Expr                 ::= 1((Bindings | 'implicit'? id | '_') '=>' Expr | Expr1),'NoneType' object has no attribute 'lower'
157,Expr1                ::= 1(IfExpression,'NoneType' object has no attribute 'lower'
167,PostfixExpr          ::= -1(InfixExpr (id nl?)?),'NoneType' object has no attribute 'lower'
168,InfixExpr            ::= <((PrefixExpr | InfixExpr id nl? InfixExpr)),'NoneType' object has no attribute 'lower'
169,PrefixExpr           ::= ('-' | '+' | '~' | '!')? SimpleExpr,'NoneType' object has no attribute 'lower'
170,SimpleExpr           ::= 'new' (ClassTemplate | TemplateBody),'NoneType' object has no attribute 'lower'
173,SimpleExpr1          ::= 10(Literal,'NoneType' object has no attribute 'lower'
180,"Exprs                ::= Expr (',' Expr)*",'NoneType' object has no attribute 'lower'
181,ArgumentExprs        ::= '(' Exprs? ')','NoneType' object has no attribute 'lower'
184,BlockExpr            ::= '{' CaseClauses '}','NoneType' object has no attribute 'lower'
192,ResultExpr           ::= -10(Expr1,"string indices must be integers, not 'str'"
197,Generator            ::= Pattern1 '<-' Expr (semi? Guard | semi Pattern1 '=' Expr)*,"string indices must be integers, not 'str'"
200,"CaseClause           ::= ""case"" Pattern Guard? ""=>"" Block","string indices must be integers, not 'str'"
201,Guard                ::= 'if' PostfixExpr,'NoneType' object has no attribute 'lower'
203,Pattern              ::= Pattern1 ('|' Pattern1)*,"string indices must be integers, not 'str'"
204,Pattern1             ::= boundvarid ':' TypePat,'NoneType' object has no attribute 'lower'
207,Pattern2             ::= 10(id ('@' Pattern3)?,'NoneType' object has no attribute 'lower'
209,Pattern3             ::= SimplePattern,'NoneType' object has no attribute 'lower'
211,SimplePattern        ::= ('_',"string indices must be integers, not 'str'"
218,"Patterns             ::= (Pattern (',' Patterns)?",'NoneType' object has no attribute 'lower'
221,"TypeParamClause      ::= '[' VariantTypeParam (',' VariantTypeParam)* ']'",'NoneType' object has no attribute 'lower'
222,"FunTypeParamClause   ::= '[' TypeParam (',' TypeParam)* ']'",'NoneType' object has no attribute 'lower'
223,VariantTypeParam     ::= Annotation* ('+' | '-')? TypeParam,'NoneType' object has no attribute 'lower'
224,TypeParam            ::= (id | '_') TypeParamClause? ('>:' Type)? ('<:' Type)?,'NoneType' object has no attribute 'lower'
227,ParamClause          ::= nl? '(' Params? ')','NoneType' object has no attribute 'lower'
228,"Params               ::= Param (',' Param)* trailingComma?",'NoneType' object has no attribute 'lower'
229,Param                ::= Annotation* id (':' ParamType)? ('=' Expr)?,'NoneType' object has no attribute 'lower'
230,ParamType            ::= (Type | '=>' Type |  Type '*'),'NoneType' object has no attribute 'lower'
231,ImplicitClassParams  ::= '(' 'implicit' ClassParams ')','NoneType' object has no attribute 'lower'
233,ClassParamClause     ::= (nl? '(' ClassParams? ')'),'NoneType' object has no attribute 'lower'
234,"ClassParams          ::= ClassParam (',' ClassParam)*",'NoneType' object has no attribute 'lower'
235,ClassParam           ::= Annotation* Modifier* (('val' | 'var'))?,'NoneType' object has no attribute 'lower'
237,"Bindings             ::= '(' Binding (',' Binding)* ')'",'NoneType' object has no attribute 'lower'
238,"Binding              ::= (id | ""_"") (':' Type)?",'NoneType' object has no attribute 'lower'
243,LocalModifier        ::= ('abstract' | 'final' | 'sealed' | 'implicit' | 'lazy'),'NoneType' object has no attribute 'lower'
244,AccessModifier       ::= ('private' | 'protected') AccessQualifier?,'NoneType' object has no attribute 'lower'
245,AccessQualifier      ::= '[' (id | 'this') ']','NoneType' object has no attribute 'lower'
247,Annotation           ::= ('@' SimpleType ArgumentExprs*),'NoneType' object has no attribute 'lower'
248,ConstrAnnotation     ::= '@' SimpleType ArgumentExprs,'NoneType' object has no attribute 'lower'
250,TemplateBody         ::= 1(nl? '{' SelfType? TemplateStat (semi TemplateStat)* '}'),'NoneType' object has no attribute 'lower'
251,TemplateStat         ::= 1(Import,'NoneType' object has no attribute 'lower'
258,SelfType             ::= (id (':' Type)? '=>' |  'this' ':' Type '=>'),'NoneType' object has no attribute 'lower'
260,"Import               ::= 'import' ImportExpr (',' ImportExpr)*",'NoneType' object has no attribute 'lower'
261,ImportExpr           ::= (StableId '.' (id | '_' | ImportSelectors)),'NoneType' object has no attribute 'lower'
262,"ImportSelectors      ::= ('{' (ImportSelector ',')* (ImportSelector | '_') '}')",'NoneType' object has no attribute 'lower'
263,ImportSelector       ::= id ('=>' id | '=>' '_')?,'NoneType' object has no attribute 'lower'
272,ValDcl               ::= ids ':' Type,'NoneType' object has no attribute 'lower'
273,VarDcl               ::= ids ':' Type,'NoneType' object has no attribute 'lower'
274,FunDcl               ::= FunSig (':' Type)?,'NoneType' object has no attribute 'lower'
276,FunSig               ::= (id FunTypeParamClause? $ParamClauses),'NoneType' object has no attribute 'lower'
277,TypeDcl              ::= id  TypeParamClause? ('>:' Type)? ('<:' Type)?,'NoneType' object has no attribute 'lower'
279,PatVarDef            ::= 'val' PatDef,'NoneType' object has no attribute 'lower'
281,Def                  ::= 1(PatVarDef,'NoneType' object has no attribute 'lower'
285,PatDef               ::= Pattern2 (':' Type)? '=' Expr,"string indices must be integers, not 'str'"
288,FunDef               ::= FunSig (':' Type)? '=' Expr,'NoneType' object has no attribute 'lower'
291,TypeDef              ::= id TypeParamClause? '=' Type,'NoneType' object has no attribute 'lower'
293,TmplDef              ::= 'case'? 'class' ClassDef,'NoneType' object has no attribute 'lower'
298,TraitDef             ::= id TypeParamClause? ($TraitTemplateOpt),'NoneType' object has no attribute 'lower'
299,ObjectDef            ::= id ($ClassTemplateOpt),'NoneType' object has no attribute 'lower'
304,ClassTemplate        ::= -1(EarlyDefs? ClassParents TemplateBody?),'NoneType' object has no attribute 'lower'
305,TraitTemplate        ::= -1(EarlyDefs? TraitParents TemplateBody?),'NoneType' object has no attribute 'lower'
306,ClassParents         ::= Constr ('with' AnnotType)*,'NoneType' object has no attribute 'lower'
307,TraitParents         ::= AnnotType ('with' AnnotType)*,'NoneType' object has no attribute 'lower'
309,EarlyDefs            ::= '{' (EarlyDef (semi EarlyDef)*)? '}' 'with','NoneType' object has no attribute 'lower'
310,EarlyDef             ::= 1((Annotation nl?)* Modifier* PatVarDef),'NoneType' object has no attribute 'lower'
314,ConstrBlock          ::= '{' SelfInvocation (semi BlockStat)* empty? '}','NoneType' object has no attribute 'lower'
316,SelfInvocation       ::= 'this' ArgumentExprs ArgumentExprs*,'NoneType' object has no attribute 'lower'
323,Packaging            ::= 'package' QualId nl? '{' TopStatSeq '}','NoneType' object has no attribute 'lower'
324,PackageObject        ::= 'package' 'object' ObjectDef,'NoneType' object has no attribute 'lower'
